(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{462:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("原型是JavaScript特性之一，JavaScript实现复用性（继承）利用的就是原型、原型链。"),s("br"),t._v("\nES6提供的class关键字让我们可以仿照Java实现一个“类”，使用extends实现类的继承\n，其本质仍然是原型、原型链。")]),t._v(" "),s("h2",{attrs:{id:"原型、原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型、原型链"}},[t._v("#")]),t._v(" 原型、原型链")]),t._v(" "),s("h3",{attrs:{id:"核心点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心点"}},[t._v("#")]),t._v(" 核心点")]),t._v(" "),s("ul",[s("li",[t._v("原型"),s("strong",[t._v("是一个对象，里面包含一些公共属性、方法")]),t._v("。")]),t._v(" "),s("li",[t._v("对象（实例）都有一个隐式（私有）属性__proto__，指向其构造函数的prototype属性。")]),t._v(" "),s("li",[t._v("函数（函数也是对象）都有一个属性prototype，该属性指向的就是原型。")]),t._v(" "),s("li",[t._v("原型里面有一个属性constructor指向其（构造）函数本身。")]),t._v(" "),s("li",[t._v("对象的__proto__（原型）有自己的__proto__，一直向上到一个内置对象（由顶级Object构造函数创建），其__proto__（原型）为null。")]),t._v(" "),s("li",[t._v("原型本身也会有自己的原型，这种"),s("strong",[t._v("由原型之间一层层链接起来的数据结构称为原型链")]),t._v("。因为null不是原型，所以原型链的顶端是null。")]),t._v(" "),s("li",[t._v("函数的__proto__（原型）是一个匿名函数（function anonymous），匿名函数的__proto__指向内置对象。")])]),t._v(" "),s("h3",{attrs:{id:"图例参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图例参考"}},[t._v("#")]),t._v(" 图例参考")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2022/07/31/G6nThJlWt1DUcCV.png",alt:"原型链流程图.png"}})]),t._v(" "),s("h3",{attrs:{id:"一些思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些思考"}},[t._v("#")]),t._v(" 一些思考")]),t._v(" "),s("ul",[s("li",[t._v("为什么只有函数才有prototype，被认为是特殊的对象？"),s("br"),t._v("\n因为函数能够创造对象实例，创造出来的对象实例统一通过__proto__能够访问原型，这就实现了多个对象继承。")]),t._v(" "),s("li",[t._v("为什么存在原型链？"),s("br"),t._v("\n基于原型自身是一个普通对象，是被Object函数构造的，所以原型对象本身也有__proto__属性，也就有了能够访问到Object实例对象的原型。\nJavaScript中万物皆对象，Object是最顶层的函数，所以其原型也是最顶层的了，所以设定了最顶层这个原型对象的原型是null，也就没有办法继续根据原型去查找某些属性了。")]),t._v(" "),s("li",[t._v("所以原型具象的代称是什么呢？"),s("br"),t._v(" "),s("strong",[t._v("__proto__可以代称为原型")]),t._v("。万物皆对象，所有对象都是被构造出来的，所以他们都有自己的原型（构造者的基因），都是通过__proto__进行访问。")]),t._v(" "),s("li",[t._v("目的是什么呢？"),s("br"),t._v("\n这种特性，实现了继承，方便了复用。")])]),t._v(" "),s("h3",{attrs:{id:"proto-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proto-注意点"}},[t._v("#")]),t._v(" __proto__注意点")]),t._v(" "),s("p",[t._v("一般不推荐使用__proto__，推荐使用Object.getPrototypeOf/Object.setPrototypeOf。"),s("br"),t._v("\n__proto__属性已在ECMAScript 6语言规范中标准化。"),s("br"),t._v(" "),s("strong",[t._v("设置对象的原型是一个缓慢的操作，若对性能有要求，避免设置对象的原型")]),t._v("。\nObject.setPrototypeOf这种设置对象原型性能差，我们尽量还是使用"),s("strong",[t._v("Object.create")]),t._v("为对象设置原型。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// obj的原型是Object.prototype")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以obj为原型创建一个新的对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// methodA是原型对象obj上的方法。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即newObj继承了它的原型对象obj的属性和方法。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// log hello")]),t._v("\nnewObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"原型链查找机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链查找机制"}},[t._v("#")]),t._v(" 原型链查找机制")]),t._v(" "),s("p",[t._v("当我们去访问某个对象的属性或方法，若该对象没有该属性或方法，JavaScript引擎会遍历原型链上的的所有原型对象，以此去查找属性或方法，直至找到为止，若整个原型链遍历完毕仍未查找到，抛出错误。")]),t._v(" "),s("blockquote",[s("p",[t._v("类似"),s("strong",[t._v("作用域链的变量")]),t._v("查找机制。")])]),t._v(" "),s("h2",{attrs:{id:"es6-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-class"}},[t._v("#")]),t._v(" ES6 class")]),t._v(" "),s("p",[t._v("类（class）有一个prototype属性，这就说明了class本质是构造函数的语法糖。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// log "function"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("原型是一个对象。")]),t._v(" "),s("li",[t._v("访问一个对象的属性，不仅仅访问该对象，JavaScript引擎还会查找该对象的原型，以及该对象原型的原型，依次层层向上，直至找到或到原型链顶端。")]),t._v(" "),s("li",[t._v("所有函数的原型 => 匿名函数原型")]),t._v(" "),s("li",[t._v("所有对象的根原型 => 内置Object对象原型")])])])}),[],!1,null,null,null);s.default=r.exports}}]);