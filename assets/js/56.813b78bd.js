(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{468:function(t,_,v){"use strict";v.r(_);var a=v(2),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),_("p",[t._v("传输层建立TCP连接三个阶段：")]),t._v(" "),_("ul",[_("li",[t._v("建立连接")]),t._v(" "),_("li",[t._v("传输数据")]),t._v(" "),_("li",[t._v("断开连接")])]),t._v(" "),_("p",[t._v("HTTP协议，是"),_("strong",[t._v("建立在TCP基础之上的，属于应用层")]),t._v("。"),_("br"),t._v("\nHTTP是一种允许"),_("strong",[t._v("浏览器向服务器获取资源")]),t._v("的协议，Web的基础（浏览器使用最广的协议），一般由浏览器发起请求，用来获取不同类型的资源，常见的资源：")]),t._v(" "),_("ul",[_("li",[t._v("HTML文件")]),t._v(" "),_("li",[t._v("CSS文件")]),t._v(" "),_("li",[t._v("JavaScript文件")]),t._v(" "),_("li",[t._v("图片")]),t._v(" "),_("li",[t._v("视频more...")])]),t._v(" "),_("h2",{attrs:{id:"浏览器端发起http请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器端发起http请求"}},[t._v("#")]),t._v(" 浏览器端发起HTTP请求")]),t._v(" "),_("h3",{attrs:{id:"_1-构造请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-构造请求"}},[t._v("#")]),t._v(" 1. 构造请求")]),t._v(" "),_("p",[t._v("浏览器构建"),_("strong",[t._v("请求行")]),t._v("信息，构建完毕，浏览器准备发起网络请求。")]),t._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("GET /index.html HTTP1.1\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br")])]),_("h3",{attrs:{id:"_2-查找缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-查找缓存"}},[t._v("#")]),t._v(" 2. 查找缓存")]),t._v(" "),_("p",[t._v("发起网络请求之前，浏览器会先到浏览器缓存中查询是否有需要请求的文件，浏览器缓存是一种在本地保存的资源副本，用于下次请求直接使用缓存的技术。"),_("br"),t._v("\n如果浏览器发现缓存有副本，会拦截请求，返回该资源副本，结束请求。")]),t._v(" "),_("ul",[_("li",[t._v("缓解服务器压力，提升性能（资源获取时间更短）")]),t._v(" "),_("li",[t._v("对于网站，缓存是实现资源快速加载的重要组成")])]),t._v(" "),_("p",[t._v("如果没有发现缓存，则进入网络请求。")]),t._v(" "),_("h3",{attrs:{id:"_3-准备ip地址和端口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备ip地址和端口"}},[t._v("#")]),t._v(" 3. 准备IP地址和端口")]),t._v(" "),_("p",[t._v("浏览器使用HTTP协议作为应用层协议，用于封装请求的文本信息，并使用TCP/IP作为传输层协议来发送到网络。"),_("br"),t._v("\n发起HTTP请求之前，浏览器首先通过TCP与服务器建立连接，HTTP的内容实际在TCP传输数据阶段来实现的。")]),t._v(" "),_("ul",[_("li",[t._v("使用DNS（Domain Name System）把域名和IP进行映射（浏览器DNS数据也是有缓存服务的）")]),t._v(" "),_("li",[t._v("拿到IP地址后，获取URL（Uniform Resource Identifier）端口号（若URL没有特别指明端口号，则HTTP协议默认是"),_("strong",[t._v("80端口")]),t._v("）\n"),_("img",{attrs:{src:"https://s2.loli.net/2022/09/01/zy6dkSiujEpKYB3.png",alt:"TCP、HTTP关系"}})])]),t._v(" "),_("h3",{attrs:{id:"_4-等待tcp队列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-等待tcp队列"}},[t._v("#")]),t._v(" 4. 等待TCP队列")]),t._v(" "),_("p",[t._v("有了IP地址和端口号后并不能立即去建立TCP连接。"),_("br"),t._v("\nChrome的机制：同一个域名同时"),_("strong",[t._v("最多只能建立6个TCP连接")]),t._v("，超过6个的请求会进入排队等待状态，直至进行中的请求完成。若当前请求数量少于6，则直接开始建立TCP连接。")]),t._v(" "),_("h3",{attrs:{id:"_5-建立tcp连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-建立tcp连接"}},[t._v("#")]),t._v(" 5. 建立TCP连接")]),t._v(" "),_("p",[t._v("等待排队结束，就可以开始和服务器握手了。HTTP工作之前，浏览器需要通过TCP和服务器建立连接。")]),t._v(" "),_("h3",{attrs:{id:"发送http请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发送http请求"}},[t._v("#")]),t._v(" 发送HTTP请求")]),t._v(" "),_("p",[t._v("一旦建立TCP连接，浏览器就可以和服务器进行通信。HTTP中的数据就是在这个通信过程中进行传输。浏览器向服务器发送请求行（"),_("strong",[t._v("请求方法 + 请求URL + HTTP版本协议")]),t._v("），告诉服务器浏览器需要什么资源。"),_("br"),t._v("\nGET请求：\n"),_("img",{attrs:{src:"https://s2.loli.net/2022/09/01/VnvkrGM9gZIzJFS.png",alt:"发送HTTP请求"}}),t._v("\nPOST请求：一般用于发送数据给服务器，发送的数据一般通过"),_("strong",[t._v("请求体")]),t._v("发送。"),_("br"),t._v("\n发送请求行命令后，还需要发送"),_("strong",[t._v("请求头传输一些其他信息")]),t._v("，把浏览器的一些基础信息告诉服务器，比如包含了浏览器所使用的操作系统、浏览器内核等信息，以及当前请求的域名信息、浏览器端的Cookie信息等等。")]),t._v(" "),_("h2",{attrs:{id:"服务器处理http请求流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务器处理http请求流程"}},[t._v("#")]),t._v(" 服务器处理HTTP请求流程")]),t._v(" "),_("h3",{attrs:{id:"_1-一旦服务器处理结束-返回响应数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-一旦服务器处理结束-返回响应数据"}},[t._v("#")]),t._v(" 1. 一旦服务器处理结束，返回响应数据")]),t._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("-i可以返回响应行、响应头、响应体数据\ncurl -i  mobs.fun\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br")])]),_("ul",[_("li",[t._v("响应行：协议版本 + 状态码（200成功、404未找到资源...）")]),t._v(" "),_("li",[t._v("响应头：服务器自身的信息，比如生成数据返回的时间、返回的数据类型（JSON、HTML、流媒体）、服务端要在客户端保存的Cookie信息。")]),t._v(" "),_("li",[t._v("响应体：HTML实际内容等等")])]),t._v(" "),_("h3",{attrs:{id:"_2-断开连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-断开连接"}},[t._v("#")]),t._v(" 2. 断开连接")]),t._v(" "),_("p",[t._v("一般服务器向客户端返回了数据，服务器就要关闭TCP连接了，如果浏览器或服务器在其头信息加入了"),_("strong",[t._v("Connection:Keep-Alive")]),t._v("，TCP连接在发送HTTP请求后仍然保持打开状态，这样浏览器可以在同一个TCP连接上发送请求。"),_("br"),t._v(" "),_("strong",[t._v("保持TCP的连接可以省去下次请求时需要再次建立TCP连接的时间")]),t._v("，提高资源加载速度。一个Web页面如果初始化了一个持久TCP连接，就可以复用该连接，来请求其他资源，不需要重新再建立新的TCP连接。")]),t._v(" "),_("h3",{attrs:{id:"_3-重定向-301"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-重定向-301"}},[t._v("#")]),t._v(" 3. 重定向 -- 301")]),t._v(" "),_("p",[t._v("响应行返回的状态码是"),_("strong",[t._v("301")]),t._v("，状态301就是告诉浏览器，我需要重定向到另外一个网址，而需要重定向的网址正是包含在响应头的"),_("strong",[t._v("Location")]),t._v("字段中，然后浏览器获取Location字段中的地址，并使用该地址重新导航，这就是一个完整重定向的执行流程。")]),t._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("-I 获取响应头、响应行，不获取响应体。\ncurl -I  mobs.fun\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br")])]),_("h2",{attrs:{id:"为什么很多站点第二次打开速度很快"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么很多站点第二次打开速度很快"}},[t._v("#")]),t._v(" 为什么很多站点第二次打开速度很快？")]),t._v(" "),_("p",[t._v("如果第二次页面打开很快，主要原因是第一次加载页面过程中，缓存了一些耗时的数据。"),_("br")]),t._v(" "),_("ul",[_("li",[t._v("DNS缓存（IP和域名映射表）")]),t._v(" "),_("li",[t._v("页面资源缓存")])]),t._v(" "),_("h3",{attrs:{id:"服务器返回响应头中cache-control缓存资源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务器返回响应头中cache-control缓存资源"}},[t._v("#")]),t._v(" 服务器返回响应头中Cache-Control缓存资源")]),t._v(" "),_("p",[_("strong",[t._v("Cache-Control")]),t._v("字段设置是否缓存该资源，过期时长使用"),_("strong",[t._v("Max-age")]),t._v("参数。")]),t._v(" "),_("ul",[_("li",[t._v("如果缓存资源未过期，再次请求会直接返回缓存中的资源给浏览器。")]),t._v(" "),_("li",[t._v('如果缓存过期，浏览器继续发起网络请求，并在HTTP请求头中带上If-None-Match:"xxxx"，服务器接受到请求头，根据'),_("strong",[t._v("If-None-Match")]),t._v("来判断请求的资源是否有更新。")]),t._v(" "),_("li",[t._v("如果服务器资源有更新，直接返回最新资源。")]),t._v(" "),_("li",[t._v("如果没有更新，返回304状态码，刷新缓存新鲜度，告诉浏览器这个缓存可以继续使用，不需要重复发数据给你。")])]),t._v(" "),_("h3",{attrs:{id:"保持登录状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#保持登录状态"}},[t._v("#")]),t._v(" 保持登录状态")]),t._v(" "),_("ul",[_("li",[t._v("服务器接受浏览器提交的信息，生成一段用户身份串并且写到响应头的"),_("strong",[t._v("Set-Cookie")]),t._v("字段中。")]),t._v(" "),_("li",[t._v("浏览器接收到服务器响应头，解析响应头遇到Set-Cookie字段，浏览器把这个字段信息保存到本地。")]),t._v(" "),_("li",[t._v("用户再次访问，浏览器发起HTTP请求，发起请求之前会读取之前保存在Cookie的数据，并把数据写进请求头的Cookie字段中。")]),t._v(" "),_("li",[t._v("服务器接收到HTTP请求头数据后，查找请求头中的Cookie字段，返回包含用户信息的数据页面。")])]),t._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("ul",[_("li",[t._v("构造请求")]),t._v(" "),_("li",[t._v("查找缓存")]),t._v(" "),_("li",[t._v("准备IP和端口（DNS）")]),t._v(" "),_("li",[t._v("等待TCP队列")]),t._v(" "),_("li",[t._v("建立TCP请求")]),t._v(" "),_("li",[t._v("发起HTTP请求（Cache Control、Cookie Set）")]),t._v(" "),_("li",[t._v("服务器处理请求")]),t._v(" "),_("li",[t._v("服务器返回响应")]),t._v(" "),_("li",[t._v("断开TCP连接")])])])}),[],!1,null,null,null);_.default=s.exports}}]);